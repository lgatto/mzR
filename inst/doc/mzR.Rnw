%\VignetteIndexEntry{mzR, Ramp, mzXML, mzData, mzML}
%\VignetteKeywords{mzXML, mzData, mzML, Ramp, mass spectrometry, proteomics, metabolomics}
%\VignettePackage{mzR}

\documentclass[10pt,a4paper]{article}
\usepackage[authoryear,round]{natbib}

\RequirePackage{amsfonts,amsmath,amstext,amssymb,amscd}
\usepackage{graphicx}
\usepackage{verbatim}
\usepackage{hyperref}
\usepackage{color}
\definecolor{darkblue}{rgb}{0.2,0.0,0.4}

%% \topmargin -1.5cm
%% \oddsidemargin -0cm   % read Lamport p.163
%% \evensidemargin -0cm  % same as oddsidemargin but for left-hand pages
%% \textwidth 17cm
%% \textheight 24.5cm
%% \parindent0em

\newcommand{\lib}[1]{{\mbox{\normalfont\textsf{#1}}}}
\newcommand{\file}[1]{{\mbox{\normalfont\textsf{'#1'}}}}
\newcommand{\R}{{\mbox{\normalfont\textsf{R}}}}
\newcommand{\Rfunction}[1]{{\mbox{\normalfont\texttt{#1}}}}
\newcommand{\Robject}[1]{{\mbox{\normalfont\texttt{#1}}}}
\newcommand{\Rpackage}[1]{{\mbox{\normalfont\textsf{#1}}}}
\newcommand{\Rclass}[1]{{\mbox{\normalfont\textit{#1}}}}
\newcommand{\code}[1]{{\mbox{\normalfont\texttt{#1}}}}

\newcommand{\email}[1]{\mbox{\href{mailto:#1}{\textcolor{darkblue}{\normalfont{#1}}}}}
\newcommand{\web}[2]{\mbox{\href{#2}{\textcolor{darkblue}{\normalfont{#1}}}}}

\SweaveOpts{keep.source=TRUE,eps=FALSE}

\begin{document}

\title{A Parser for mzXML, mzData and mzML files}

\author{Bernd Fischer, Laurent Gatto and Steffen Neumann}

\maketitle

\tableofcontents

\section{Introduction}

The \Rpackage{mzR} package aims at providing a common interface to several mass spectrometry data formats: 
\texttt{mzData} \citep{Orchard2007}, 
\texttt{mzXML} \citep{Pedrioli2004} and the latest 
\texttt{mzML} \citep{Martens2010}. 

Most importantly, access to the data should be fast and memory efficient. This is made possible by 
allowing random file access, i.e. retrieving specific data of interest without having to sequentially browser 
the full content. 

The actual work of reading and parsing the data files is handled by
the included C/C++ libraries. The RAMP parser, written at the
Institute for Systems Biology (ISB) is a fast and lightweight parser
in pure C. Later, it gained support for the mzData format.

The C++ reference implementation for the mzML is the proteowizard
library (pwiz in short), which in turn makes use of the boost C++
library. RAMP is able to access mzML files by calling pwiz methods.

The mzR package is in essence a collection of wrappers to the C++
code, and benefits from the C++ interface provided through the Rcpp
package.

\section{Example}

A short example sequence to read data from a mass spectrometer. First open the file.

<<open the file>>=
library(mzR)
library(msdata)

mzxml <- system.file("threonine/threonine_i2_e35_pH_tree.mzXML", 
                     package = "msdata")
aa <- openMSfile(mzxml)
@ 

We can obtain different kind of header information.
<<get header information>>=
runInfo(aa)
instrumentInfo(aa)
header(aa,1)
@ 

Read a single spectrum from the file.
<<plotspectrum, fig = TRUE, eps = FALSE>>=
pl <- peaks(aa,10)
peaksCount(aa,10)
head(pl)
plot(pl[,1], pl[,2], type="h", lwd=1)
@ 

You should close the file when not needed any more. This will release the memory of cached content.
<<close the file>>=
close(aa)
@ 

\section{Future plans}

Right on the heels of the initial release supporting little metadata
beyond e.g. the instrument model is access to the full pwiz
functionality to access the full metadata stored in an mzML file, or
the chromatograms which store e.g. MRM data. Other file formats
supported by pwiz, such as mzIdentML to store protein identification
results are also possible in the future. 

\section{Session information}\label{sec:sessionInfo} 

<<label=sessioninfo,results=tex,echo=FALSE,cache=FALSE>>=
  toLatex(sessionInfo())
@ 


\bibliographystyle{plainnat}
\bibliography{mzR}

\end{document}



